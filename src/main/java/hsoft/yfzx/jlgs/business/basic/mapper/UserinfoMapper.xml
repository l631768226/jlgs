<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hsoft.yfzx.jlgs.business.basic.mapper.UserinfoMapper">
  <resultMap id="BaseResultMap" type="hsoft.yfzx.jlgs.business.basic.model.Userinfo">
    <id column="userId" jdbcType="VARCHAR" property="userId" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="realName" jdbcType="VARCHAR" property="realName" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="picId" jdbcType="VARCHAR" property="picId" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="phone1" jdbcType="VARCHAR" property="phone1" />
    <result column="phone2" jdbcType="VARCHAR" property="phone2" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="hiredate" jdbcType="DECIMAL" property="hiredate" />
    <result column="jobLevel" jdbcType="VARCHAR" property="jobLevel" />
    <result column="birthday" jdbcType="DECIMAL" property="birthday" />
    <result column="workAddress" jdbcType="VARCHAR" property="workAddress" />
    <result column="deviceType" jdbcType="VARCHAR" property="deviceType" />
    <result column="IMEI" jdbcType="VARCHAR" property="IMEI" />
    <result column="createTime" jdbcType="DECIMAL" property="createTime" />
    <result column="versionStamp" jdbcType="DECIMAL" property="versionStamp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, userName, password, salt, realName, gender, nation, idcard, picId, tel, phone1, 
    phone2, email, hiredate, jobLevel, birthday, workAddress, deviceType, IMEI, createTime, 
    versionStamp
  </sql>
  <select id="selectByExample" parameterType="hsoft.yfzx.jlgs.business.basic.model.UserinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where userId = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from userinfo
    where userId = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="hsoft.yfzx.jlgs.business.basic.model.UserinfoExample">
    delete from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="hsoft.yfzx.jlgs.business.basic.model.Userinfo">
    insert into userinfo (userId, userName, password, 
      salt, realName, gender, 
      nation, idcard, picId, 
      tel, phone1, phone2, 
      email, hiredate, jobLevel, 
      birthday, workAddress, deviceType, 
      IMEI, createTime, versionStamp
      )
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{nation,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{picId,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{phone1,jdbcType=VARCHAR}, #{phone2,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{hiredate,jdbcType=DECIMAL}, #{jobLevel,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DECIMAL}, #{workAddress,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR}, 
      #{IMEI,jdbcType=VARCHAR}, #{createTime,jdbcType=DECIMAL}, #{versionStamp,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="hsoft.yfzx.jlgs.business.basic.model.Userinfo">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        userId,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="realName != null">
        realName,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="picId != null">
        picId,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="phone1 != null">
        phone1,
      </if>
      <if test="phone2 != null">
        phone2,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="hiredate != null">
        hiredate,
      </if>
      <if test="jobLevel != null">
        jobLevel,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="workAddress != null">
        workAddress,
      </if>
      <if test="deviceType != null">
        deviceType,
      </if>
      <if test="IMEI != null">
        IMEI,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="versionStamp != null">
        versionStamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="picId != null">
        #{picId,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        #{hiredate,jdbcType=DECIMAL},
      </if>
      <if test="jobLevel != null">
        #{jobLevel,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DECIMAL},
      </if>
      <if test="workAddress != null">
        #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="IMEI != null">
        #{IMEI,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DECIMAL},
      </if>
      <if test="versionStamp != null">
        #{versionStamp,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="hsoft.yfzx.jlgs.business.basic.model.UserinfoExample" resultType="java.lang.Long">
    select count(*) from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update userinfo
    <set>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        realName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.picId != null">
        picId = #{record.picId,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.phone1 != null">
        phone1 = #{record.phone1,jdbcType=VARCHAR},
      </if>
      <if test="record.phone2 != null">
        phone2 = #{record.phone2,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.hiredate != null">
        hiredate = #{record.hiredate,jdbcType=DECIMAL},
      </if>
      <if test="record.jobLevel != null">
        jobLevel = #{record.jobLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DECIMAL},
      </if>
      <if test="record.workAddress != null">
        workAddress = #{record.workAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null">
        deviceType = #{record.deviceType,jdbcType=VARCHAR},
      </if>
      <if test="record.IMEI != null">
        IMEI = #{record.IMEI,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=DECIMAL},
      </if>
      <if test="record.versionStamp != null">
        versionStamp = #{record.versionStamp,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userinfo
    set userId = #{record.userId,jdbcType=VARCHAR},
      userName = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      realName = #{record.realName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      picId = #{record.picId,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      phone1 = #{record.phone1,jdbcType=VARCHAR},
      phone2 = #{record.phone2,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      hiredate = #{record.hiredate,jdbcType=DECIMAL},
      jobLevel = #{record.jobLevel,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DECIMAL},
      workAddress = #{record.workAddress,jdbcType=VARCHAR},
      deviceType = #{record.deviceType,jdbcType=VARCHAR},
      IMEI = #{record.IMEI,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=DECIMAL},
      versionStamp = #{record.versionStamp,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="hsoft.yfzx.jlgs.business.basic.model.Userinfo">
    update userinfo
    <set>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        realName = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="picId != null">
        picId = #{picId,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        phone1 = #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        phone2 = #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        hiredate = #{hiredate,jdbcType=DECIMAL},
      </if>
      <if test="jobLevel != null">
        jobLevel = #{jobLevel,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DECIMAL},
      </if>
      <if test="workAddress != null">
        workAddress = #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        deviceType = #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="IMEI != null">
        IMEI = #{IMEI,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=DECIMAL},
      </if>
      <if test="versionStamp != null">
        versionStamp = #{versionStamp,jdbcType=DECIMAL},
      </if>
    </set>
    where userId = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="hsoft.yfzx.jlgs.business.basic.model.Userinfo">
    update userinfo
    set userName = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      realName = #{realName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      picId = #{picId,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      phone1 = #{phone1,jdbcType=VARCHAR},
      phone2 = #{phone2,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      hiredate = #{hiredate,jdbcType=DECIMAL},
      jobLevel = #{jobLevel,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DECIMAL},
      workAddress = #{workAddress,jdbcType=VARCHAR},
      deviceType = #{deviceType,jdbcType=VARCHAR},
      IMEI = #{IMEI,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=DECIMAL},
      versionStamp = #{versionStamp,jdbcType=DECIMAL}
    where userId = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>